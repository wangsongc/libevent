os:
  - linux
  - osx
dist: trusty
osx_image: xcode10.1

branches:
  except:
  - /.*appveyor.*/
  - /.*win.*/
  - /.*mingw.*/
  - /.*freebsd.*/
  - /.*bitrise.*/

git:
  quiet: true

env:
  matrix:
    - EVENT_BUILD_METHOD=cmake EVENT_CMAKE_OPTIONS="-DEVENT__COVERAGE=ON -DCMAKE_BUILD_TYPE=debug" COVERALLS=yes
    - EVENT_BUILD_METHOD=cmake EVENT_CMAKE_OPTIONS=""
    - EVENT_BUILD_METHOD=autotools EVENT_CONFIGURE_OPTIONS="--disable-debug-mode"
  

matrix:
  exclude:
    - os: osx
      env: EVENT_BUILD_METHOD=cmake EVENT_CMAKE_OPTIONS="-DEVENT__COVERAGE=ON -DCMAKE_BUILD_TYPE=debug" COVERALLS=yes
  allow_failures:
    - os: osx
  fast_finish: true

language: c
compiler:
  - gcc
  - clang

before_install:
  # do not run with clang, since it fails (SIGSEGV)
  - if [ "$CC" = "clang" ]; then
      unset COVERALLS;
    fi
  - if [ -n "$COVERALLS" ]; then
      pip install --user cpp-coveralls;
    fi
  - export JOBS=20
  - export TIMEOUT=50
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
    sudo mv /usr/bin/openssl /usr/bin/openssl.old;
    sudo mv /usr/include/openssl /usr/include/openssl.old;
    wget  http://www.openssl.org/source/openssl-1.1.0e.tar.gz;
    tar -zxvf openssl-1.1.0e.tar.gz;
    cd /openssl-1.1.0e;
    sudo ./config shared zlib  --prefix=/usr/local/openssl && make && make install;
    sudo ln -s /usr/local/openssl/bin/openssl /usr/bin/openssl;
    sudo ln -s /usr/local/openssl/include/openssl /usr/include/openssl;
    sudo ln -sf /usr/local/openssl/lib/libcrypto.so.1.0.0 /lib/libcrypto.so.6;
    sudo echo "/usr/local/openssl/lib" >>/etc/ld.so.conf;
    ldconfig -v;
    cd ..;
    sudo rm -rf openssl-1.1.0e.tar.gz openssl-1.1.0e;
    openssl version -a;
    sudo apt-get install libssl-dev zlib1g-dev;
    fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      if [ "$CC" == "gcc" ]; then
        export CC=$(ls /usr/local/Cellar/gcc/*/bin/gcc-?);
      fi

      export OPENSSL_ROOT=$(echo /usr/local/Cellar/openssl/*);
      export
        CMAKE_INCLUDE_PATH=$OPENSSL_ROOT/include
        CMAKE_LIBRARY_PATH=$OPENSSL_ROOT/lib;
      export
        CFLAGS=-I$CMAKE_INCLUDE_PATH
        LDFLAGS=-L$CMAKE_LIBRARY_PATH;

      export JOBS=1;
    fi

addons:
  apt:
    sources:
    - xenial
    - sourceline: 'deb http://archive.ubuntu.com/ubuntu xenial main'
    packages:
    - zlib1g-dev
    - libssl-dev
    - build-essential
    - automake
    - autoconf
    - cmake
    - lcov
  homebrew:
    packages:
    - openssl
    - lcov
    - libtool
    - gcc


script:
  - if [ "$EVENT_BUILD_METHOD" = "autotools" ]; then
      ./autogen.sh &&
      ./configure $EVENT_CONFIGURE_OPTIONS &&
      make &&
      travis_wait $TIMEOUT make -j $JOBS verify;
    fi
  - if [ "$EVENT_BUILD_METHOD" = "cmake" ]; then
      export
        CTEST_PARALLEL_LEVEL=$JOBS
        CTEST_OUTPUT_ON_FAILURE=1;

      mkdir build &&
      cd build &&
      cmake .. $EVENT_CMAKE_OPTIONS &&
      travis_wait $TIMEOUT
      cmake --build . --target verify;
    fi

after_script:
  - if [ -n "$COVERALLS" ]; then
      coveralls
        --build-root .
        --root ..
        --exclude test
        --exclude sample
        --exclude cmake
        --exclude build/CMakeFiles/CheckTypeSize
        --exclude build/CMakeFiles/CompilerIdC
        --gcov-options '\-lp';
    fi
