branches:
  except:
  - /.*appveyor.*/
  - /.*win.*/
  - /.*mingw.*/
  - /.*freebsd.*/
  - /.*bitrise.*/

git:
  quiet: true  

matrix:
  include:
    - os: linux
      dist: trusty
      env:
        matrix:
          - EVENT_BUILD_METHOD=cmake EVENT_CMAKE_OPTIONS="-DEVENT__COVERAGE=ON -DCMAKE_BUILD_TYPE=debug" COVERALLS=yes
          - EVENT_BUILD_METHOD=cmake EVENT_CMAKE_OPTIONS=""
          - EVENT_BUILD_METHOD=autotools EVENT_CONFIGURE_OPTIONS="--disable-debug-mode"
     
    - os: linux
      dist: bionic
      env:
        matrix:
          - EVENT_BUILD_METHOD=cmake EVENT_CMAKE_OPTIONS="-DEVENT__COVERAGE=ON -DCMAKE_BUILD_TYPE=debug" COVERALLS=yes
          - EVENT_BUILD_METHOD=cmake EVENT_CMAKE_OPTIONS=""
          - EVENT_BUILD_METHOD=autotools EVENT_CONFIGURE_OPTIONS="--disable-debug-mode"

  exclude:
    - os: osx
      env: EVENT_BUILD_METHOD=cmake EVENT_CMAKE_OPTIONS="-DEVENT__COVERAGE=ON -DCMAKE_BUILD_TYPE=debug" COVERALLS=yes
  allow_failures:
    - os: osx
  fast_finish: true
addons:
       apt:
         sources:
         - bionic
         - sourceline: 'deb http://archive.ubuntu.com/ubuntu bionic main'
         packages:
         - zlib1g-dev
         - libssl-dev
         - build-essential
         - automake
         - autoconf
         - cmake
         - lcov
language: c
compiler:
  - gcc
  - clang

before_install:
  # do not run with clang, since it fails (SIGSEGV)
  - if [ "$CC" = "clang" ]; then
      unset COVERALLS;
    fi
  - if [ -n "$COVERALLS" ]; then
      pip install --user cpp-coveralls;
    fi
  - export JOBS=20
  - export TIMEOUT=50
 
script:
  - if [ "$EVENT_BUILD_METHOD" = "autotools" ]; then
      ./autogen.sh &&
      ./configure $EVENT_CONFIGURE_OPTIONS --disable-libevent-regress &&
      make &&
      travis_wait $TIMEOUT make -j $JOBS verify;
    fi
  - if [ "$EVENT_BUILD_METHOD" = "cmake" ]; then
      export
        CTEST_PARALLEL_LEVEL=$JOBS
        CTEST_OUTPUT_ON_FAILURE=1;

      mkdir build &&
      cd build &&
      cmake .. $EVENT_CMAKE_OPTIONS -DEVENT__DISABLE_REGRESS=ON &&
      travis_wait $TIMEOUT
      cmake --build . --target verify;
    fi

after_script:
  - if [ -n "$COVERALLS" ]; then
      coveralls
        --build-root .
        --root ..
        --exclude test
        --exclude sample
        --exclude cmake
        --exclude build/CMakeFiles/CheckTypeSize
        --exclude build/CMakeFiles/CompilerIdC
        --gcov-options '\-lp';
    fi
