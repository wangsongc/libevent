name: CI on linux

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
    - master

jobs:
  cmake:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-16.04]
        EVENT_CMAKE_OPTIONS: ["","-DEVENT__DISABLE_OPENSSL=ON","-DEVENT__DISABLE_THREAD_SUPPORT=ON","-DEVENT__DISABLE_DEBUG_MODE=ON","-DEVENT__DISABLE_MM_REPLACEMENT=ON"]
        include:
          # clang
          - os: ubuntu-16.04
            # 变量定义要修改，编译器选择要修改
            env: EVENT_BUILD_METHOD=cmake EVENT_CMAKE_OPTIONS=""
            compiler: clang
          - os: ubuntu-16.04
            env: EVENT_BUILD_METHOD=autotools EVENT_CONFIGURE_OPTIONS=""
            compiler: clang
          # coveralls
          - os: ubuntu-16.04
            env: EVENT_BUILD_METHOD=cmake EVENT_CMAKE_OPTIONS="-DEVENT__COVERAGE=ON -DCMAKE_BUILD_TYPE=debug" COVERALLS=yes
          # test-export
          - os: ubuntu-16.04
            env: EVENT_BUILD_METHOD=cmake EVENT_CMAKE_OPTIONS="-DEVENT__LIBRARY_TYPE=STATIC -DEVENT__DISABLE_TESTS=ON -DEVENT__DISABLE_SAMPLES=ON" TEST_EXPORT=STATIC
          - os: ubuntu-16.04
            env: EVENT_BUILD_METHOD=cmake EVENT_CMAKE_OPTIONS="-DEVENT__LIBRARY_TYPE=SHARED -DEVENT__DISABLE_TESTS=ON -DEVENT__DISABLE_SAMPLES=ON" TEST_EXPORT=SHARED
          # for openssl1.1
          - os: ubuntu-18.04
            env: EVENT_BUILD_METHOD=cmake EVENT_CMAKE_OPTIONS="" OPENSSL_1_1=yes
          # deploy documentation to github pages
    steps:
    - uses: actions/checkout@v1
    - name: Cache
      uses: actions/cache@v1.0.3
      with:
        # A directory to store and save the cache
        path: build
      # An explicit key for restoring and saving the cache
        key: ${{ runner.os }}-depends
    - name: install depend
      run: |
        sudo apt install zlib1g-dev libssl-dev build-essential automake autoconf cmake lcov
    - name: build and test
      env:
        CC: gcc
      shell: bash
      run: |
        # build and test
          export
          CTEST_PARALLEL_LEVEL=1
          CTEST_OUTPUT_ON_FAILURE=1;
          mkdir build &&
          cd build &&
          pwd &&
          cmake .. ${{ matrix.EVENT_CMAKE_OPTIONS }};
          if [ "$TEST_EXPORT" == "STATIC" ]; then
            cmake --build .;
            sudo python3 ../test-export/test-export.py static;
          elif [ "$TEST_EXPORT" == "SHARED" ]; then
            cmake --build .;
            sudo python3 ../test-export/test-export.py shared;
          else
            cmake --build . --target verify;
          fi
        if [ "$TOOL" == "doxygen" ]; then
          eval "$(ssh-agent -s)";
          openssl aes-256-cbc
            -K $encrypted_82aa789583ed_key
            -iv $encrypted_82aa789583ed_iv
            -in .github/travis-ci-key.enc
            -out .github/travis-ci-key -d;
          chmod 600 .github/travis-ci-key;
          ssh-add .github/travis-ci-key;
          mkdir build &&
          cd build &&
          cmake -DEVENT__DOXYGEN=ON .. &&
          cmake --build . --target doxygen;
          cd doxygen/html;
          git init;
          git add -f .;
          git commit -am "Update documentation ($TRAVIS_REPO_SLUG@$TRAVIS_COMMIT)";
          git push -f git@github.com:libevent/doc.git master;
        fi

  autotools:
    runs-on: ubuntu-16.04
    strategy:
      matrix:
        EVENT_CONFIGURE_OPTIONS: ["","--disable-openssl","--disable-thread-support","--disable-debug-mode","--disable-malloc-replacement"]
    steps:
    - uses: actions/checkout@v1
    - name: install depend
      run: |
        sudo apt install zlib1g-dev libssl-dev build-essential automake autoconf cmake lcov
    - name: build and test
      env:
        CC: gcc
      shell: bash
      run: |
        # build and test
        ./autogen.sh &&
        ./configure $EVENT_CONFIGURE_OPTIONS &&
        make &&
        make -j $JOBS verify;
