name: CI on linux

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
    - master

jobs:
  cmake:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-16.04]
        EVENT_CMAKE_OPTIONS: ["","-DEVENT__DISABLE_OPENSSL=ON","clang"]           
    steps:
    - uses: actions/checkout@v1
    - name: Cache
      uses: actions/cache@v1.0.3
      with:
        # A directory to store and save the cache
        path: build
      # An explicit key for restoring and saving the cache
        key: ${{ runner.os }}-${{ matrix.EVENT_CMAKE_OPTIONS }}
    - name: install depend
      run: |
        sudo apt install zlib1g-dev libssl-dev build-essential automake autoconf cmake lcov
    - name: set compiler clang
      env:
        CC: clang
      shell: bash
      run: |
        matrix.EVENT_CMAKE_OPTIONS=''  
      if: matrix.EVENT_CMAKE_OPTIONS='clang'
    - name: build and test with cmake
      shell: bash
      run: |
        # build and test
          export
          CTEST_PARALLEL_LEVEL=1
          CTEST_OUTPUT_ON_FAILURE=1;
          mkdir -p build &&
          cd build &&
          pwd &&
          cmake .. ${{ matrix.EVENT_CMAKE_OPTIONS }};
          if [ "$TEST_EXPORT" == "STATIC" ]; then
            cmake --build .;
            sudo python3 ../test-export/test-export.py static;
          elif [ "$TEST_EXPORT" == "SHARED" ]; then
            cmake --build .;
            sudo python3 ../test-export/test-export.py shared;
          else
            cmake --build . --target verify;
          fi
          
  autotools:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-16.04]
        EVENT_CONFIGURE_OPTIONS: ["","--disable-openssl","--disable-thread-support","--disable-debug-mode","--disable-malloc-replacement","clang"]
    steps:
    - uses: actions/checkout@v1
    - name: install depend
      run: |
        sudo apt install zlib1g-dev libssl-dev build-essential automake autoconf cmake
    - name: set compiler clang
      env:
        CC: clang
      shell: bash
      run: |
        matrix.EVENT_CMAKE_OPTIONS=''  
      if: matrix.EVENT_CMAKE_OPTIONS='clang'  
    - name: build and test
      shell: bash
      run: |
        ./autogen.sh &&
        ./configure $EVENT_CONFIGURE_OPTIONS &&
        make &&
        make -j $JOBS verify;  
        
#   clang:
#     runs-on: ${{ matrix.os }}
#     strategy:
#       fail-fast: false
#       matrix:
#         os: [ubuntu-16.04]
#         EVENT_CMAKE_OPTIONS: ["","-DEVENT__DISABLE_OPENSSL=ON"]
#         Method: [cmake, autotools]           
#     steps:
#     - uses: actions/checkout@v1
#     - name: Cache
#       uses: actions/cache@v1.0.3
#       with:
#         # A directory to store and save the cache
#         path: build
#       # An explicit key for restoring and saving the cache
#         key: ${{ runner.os }}-${{ matrix.compiler }}
#     - name: install depend
#       run: |
#         sudo apt install zlib1g-dev libssl-dev build-essential automake autoconf cmake
#     - name: build and test
#       env:
#         CC: gcc
#       shell: bash
#       run: |
#         # build and test
#           export
#           CTEST_PARALLEL_LEVEL=1
#           CTEST_OUTPUT_ON_FAILURE=1;
#           mkdir -p build &&
#           cd build &&
#           pwd &&
#           cmake .. ${{ matrix.EVENT_CMAKE_OPTIONS }};
#           cmake --build . --target verify
    

