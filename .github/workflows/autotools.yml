name: autotools on windows

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
    - gha-1
    tags:
    - '*'

jobs:
  windows2016:
    runs-on: windows-2016
    strategy:
      matrix:
        EVENT_BUILD_METHOD: [autotools]
        EVENT_MATRIX: [""]    

    steps:      
    - uses: actions/checkout@v1
    - name: Setup Python environment
      uses: actions/setup-python@v1.1.1
      with:
        python-version: 3.x
        architecture: x64

    - name: cache openssl
      id: cache-openssl
      uses: actions/cache@v1.1.0
      with:
        path: C:\vcpkg\installed
        key: ${{ matrix.EVENT_BUILD_METHOD }}-${{ matrix.EVENT_MATRIX }}

    - name: cache build
      uses: actions/cache@v1.1.0
      with:
        path: build
        key: build-${{ matrix.EVENT_BUILD_METHOD }}-${{ matrix.EVENT_MATRIX }}

    - name: install openssl
      shell: powershell
      run: | 
       vcpkg search openssl
       vcpkg install openssl:x64-windows
       echo "VCPKG_INSTALLATION_ROOT: $env:VCPKG_INSTALLATION_ROOT"
       ls $env:VCPKG_INSTALLATION_ROOT
      if: steps.cache-openssl.outputs.cache-hit != 'true'

    - name: Setup Msys2 environment
      uses: numworks/setup-msys2@v1
      with: 
    # Variant of the environment to set by default: MSYS, MINGW32 or MINGW64
        msystem: MINGW64
    - run: msys2do makepkg-mingw -sCLfc --noconfirm --noprogressbar
    - run: msys2do pacman --noconfirm -U mingw-w64-*-any.pkg.tar.xz
    - run: |
        set MSYSTEM=MINGW64
        msys2do ./autogen.sh
        msys2do mkdir build-autotools
        msys2do cd build-autotools
        msys2do ../configure $EVENT_CONFIGURE_OPTIONS
        msys2do make verify -j10
        
    - name: build and test
      env:
        OPENSSL_ROOT_DIR: C:\vcpkg\installed\x64-windows
        MPATH: C:\vcpkg\installed\x64-windows
        EVENT_TESTS_PARALLEL: 1
        EVENT_BUILD_PARALLEL: 10 
      shell: powershell
      run: |
        openssl version
        echo "GITHUB_WORKSPACE:$GITHUB_WORKSPACE"
        ls -R $env:OPENSSL_ROOT\lib
        if (( "${{ matrix.EVENT_MATRIX }}" -eq "" ) -and ( ${{ matrix.EVENT_BUILD_METHOD }} -eq cmake )) {
          $EVENT_CMAKE_OPTIONS=""
        } else {
          $EVENT_CONFIGURE_OPTIONS=""
        }
        if ($env:EVENT_BUILD_METHOD -eq 'autotools') {
          $env:PATH="$env:MPATH;$env:OPENSSL_ROOT_DIR/bin;$env:PATH"
          $env:LDFLAGS="-L$($env:OPENSSL_ROOT_DIR)/lib -L$($env:OPENSSL_ROOT_DIR)"
          $env:CFLAGS="-I$($env:OPENSSL_ROOT_DIR)/include"
          $script='
          ./autogen.sh 2>&1 3>&1
          [[ $? -ne 0 ]] && exit 1
          mkdir build-autotools 2>/dev/null
          cd build-autotools
          [[ $? -ne 0 ]] && exit 1
          ../configure $EVENT_CONFIGURE_OPTIONS 2>&1
          [[ $? -ne 0 ]] && exit 1
          make -j $EVENT_BUILD_PARALLEL 2>&1
          [[ $? -ne 0 ]] && exit 1
          make verify -j $EVENT_TESTS_PARALLEL 2>&1 '
          msys2do -c $script
        } 
