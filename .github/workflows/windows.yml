name: CI on windows

on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
    - gha-1
    tags:
    - '*'

jobs:
  windows:
    runs-on: windows-2016
    strategy:
      matrix:
        pattern: [0]
    steps:
    - uses: actions/checkout@v1
    - name: Setup Python environment
      uses: actions/setup-python@v1.1.1
      with:
    # Version range or exact version of a Python version to use, using semvers version range syntax.
        python-version: 3.x
    # The target architecture (x86, x64) of the Python interpreter.
        architecture: x64
    - name: install depend
      run: |
    - name: build and test
      env:
        OPENSSL_ROOT: 'C:\Program Files\OpenSSL'
        OPENSSL_ROOT_DIR: 'C:\Program Files\OpenSSL'
        PYTHON3: C:/Python37-x64/python.exe
        MPATH: C:/mingw-w64/x86_64-7.2.0-posix-seh-rt_v5-rev1/mingw64/bin;C:/msys64/usr/bin
        EVENT_TESTS_PARALLEL: 1
        EVENT_BUILD_PARALLEL: 10  
      shell: powershell
      run: |
        # matrix config
        if (${{ matrix.pattern }} -eq 0) {
          $env:EVENT_BUILD_METHOD="cmake"
          $env:EVENT_CMAKE_OPTIONS=""
          $env:APPVEYOR_BUILD_WORKER_IMAGE="Visual Studio 2019"
          echo $env:APPVEYOR_BUILD_WORKER_IMAGE
          $env:JOBS=1         
        }
        # build and test
        if ($env:EVENT_BUILD_METHOD -eq "cmake") {
          echo ************************
          $env:PATH="$env:OPENSSL_ROOT\bin;$env:PATH"
          echo $env:PATH
          echo $env:APPVEYOR_BUILD_WORKER_IMAGE
          echo "OPENSSL_ROOT\bin:$env:OPENSSL_ROOT\bin"
          echo "OPENSSL_ROOT_DIR:$env:OPENSSL_ROOT_DIR"
          echo "OPENSSL_CRYPTO_LIBRARY:$env:OPENSSL_CRYPTO_LIBRARY"
        }
